import { Client, Message } from 'discord.js';
import { logger } from './logger';

const WATERCOOLER_CHANNEL_ID = '964903664265359433';

const acronyms = new Map<string, string>([
  ['afaik', 'as far as I know'],
  ['afk', 'away from keyboard'],
  ['brb', 'be right back'],
  ['bro', 'brother'],
  ['btw', 'by the way'],
  ['cya', 'see you'],
  ['dm', 'direct message'],
  ['fe', 'frontend'],
  ['fomo', 'fear of missing out'],
  ['fr', 'for real'],
  ['ftw', 'for the win'],
  ['fwiw', "for what it's worth"],
  ['fyi', 'for your information'],
  ['gj', 'good job'],
  ['gm', 'good morning'],
  ['gn', 'good night'],
  ['goat', 'greatest of all time'],
  ['icymi', 'in case you missed it'],
  ['idk', "I don't know"],
  ['iirc', 'if I recall correctly'],
  ['imho', 'in my humble opinion'],
  ['imo', 'in my opinion'],
  ['irl', 'in real life'],
  ['iykyk', 'if you know you know'],
  ['j/k', 'just kidding'],
  ['jk', 'just kidding'],
  ['js', 'javascript'],
  ['lmao', 'laughing my ass off'],
  ['lol', 'laughing out loud'],
  ['n/a', 'not applicable'],
  ['n/m', 'nevermind'],
  ['ngl', 'not gonna lie'],
  ['nj', 'nice job'],
  ['noob', 'newbie'],
  ['np', 'no problem'],
  ['nsfw', 'not safe for work'],
  ['nvm', 'nevermind'],
  ['omg', 'oh my god'],
  ['ong', 'on god'],
  ['otoh', 'on the other hand'],
  ['qa', 'quality assurance'],
  ['rip', 'rest in peace'],
  ['rn', 'right now'],
  ['rofl', 'rolling on the floor laughing'],
  ['roflmao', 'rolling on the floor laughing my ass off'],
  ['sis', 'sister'],
  ['smh', 'shaking my head'],
  ['tbh', 'to be honest'],
  ['tl;dr', "too long; didn't read"],
  ['tldr', "too long; didn't read"],
  ['tn', 'tonight'],
  ['ts', 'typescript'],
  ['ty', 'thank you'],
  ['u', 'you'],
  ['ui', 'user interface'],
  ['ux', 'user experience'],
  ['wtf', 'what the fuck'],
  ['wym', 'what you mean'],
  ['wyd', 'what you doing'],
  ['yolo', 'you only live once'],
  ['yw', "you're welcome"],
]);

const technicalAcronyms = new Map<string, string>([
  ['ai', 'artificial intelligence'],
  ['api', 'application programming interface'],
  ['aws', 'amazon web services'],
  ['ci/cd', 'continuous integration/continuous deployment'],
  ['cdn', 'content delivery network'],
  ['cli', 'command line interface'],
  ['cms', 'content management system'],
  ['cpu', 'central processing unit'],
  ['crud', 'create, read, update, delete'],
  ['css', 'cascading style sheets'],
  ['db', 'database'],
  ['dsa', 'data structures and algorithms'],
  ['dto', 'data transfer object'],
  ['gpu', 'graphics processing unit'],
  ['gui', 'graphical user interface'],
  ['html', 'hypertext markup language'],
  ['http', 'hypertext transfer protocol'],
  ['https', 'hypertext transfer protocol secure'],
  ['ide', 'integrated development environment'],
  ['iot', 'internet of things'],
  ['json', 'javascript object notation'],
  ['jwt', 'json web token'],
  ['ml', 'machine learning'],
  ['mvc', 'model-view-controller'],
  ['orm', 'object-relational mapping'],
  ['os', 'operating system'],
  ['ram', 'random access memory'],
  ['rest', 'representational state transfer'],
  ['sdk', 'software development kit'],
  ['sql', 'structured query language'],
  ['ssh', 'secure shell'],
  ['ssl', 'secure sockets layer'],
  ['ssd', 'solid state drive'],
  ['tdd', 'test-driven development'],
  ['tls', 'transport layer security'],
  ['url', 'uniform resource locator'],
  ['vm', 'virtual machine'],
  ['wsl', 'windows subsystem for linux'],
  ['xml', 'extensible markup language'],
  ['yaml', 'yet another markup language'],
  ['spa', 'single page application'],
  ['pwa', 'progressive web application'],
  ['saas', 'software as a service'],
  ['paas', 'platform as a service'],
  ['iaas', 'infrastructure as a service'],
  ['cicd', 'continuous integration continuous deployment'],
  ['cors', 'cross-origin resource sharing'],
  ['csrf', 'cross-site request forgery'],
  ['xss', 'cross-site scripting'],
  ['dos', 'denial of service'],
  ['ddos', 'distributed denial of service'],
  ['2fa', 'two-factor authentication'],
  ['oauth', 'open authorization'],
  ['sso', 'single sign-on'],
  ['ldap', 'lightweight directory access protocol'],
  ['dns', 'domain name system'],
  ['tcp', 'transmission control protocol'],
  ['udp', 'user datagram protocol'],
  ['ip', 'internet protocol'],
  ['vpn', 'virtual private network'],
  ['ftp', 'file transfer protocol'],
  ['smtp', 'simple mail transfer protocol'],
  ['imap', 'internet message access protocol'],
  ['pop3', 'post office protocol 3'],
  ['ajax', 'asynchronous javascript and xml'],
  ['dom', 'document object model'],
  ['bom', 'browser object model'],
  ['seo', 'search engine optimization'],
  ['nosql', 'not only sql'],
  ['acid', 'atomicity, consistency, isolation, durability'],
  ['cap', 'consistency, availability, partition tolerance'],
  ['solid', 'single responsibility, open-closed, liskov substitution, interface segregation, dependency inversion'],
  ['dry', "don't repeat yourself"],
  ['kiss', 'keep it simple, stupid'],
  ['yagni', "you aren't gonna need it"],
  ['pr', 'pull request'],
  ['npm', 'node package manager'],
  ['grpc', 'remote procedure call'],
  ['sse', 'server-sent events'],
  ['webrtc', 'real-time communication'],
  ['amp', 'accelerated mobile pages'],
  ['jamstack', 'javascript, apis, markup'],
  ['jwt', 'json web token'],
  ['soap', 'simple object access protocol'],
  ['rpc', 'remote procedure call'],
  ['p2p', 'peer-to-peer'],
  ['b2b', 'business-to-business'],
  ['b2c', 'business-to-consumer'],
  ['crm', 'customer relationship management'],
  ['erp', 'enterprise resource planning'],
  ['etl', 'extract, transform, load'],
  ['elt', 'extract, load, transform'],
  ['oltp', 'online transaction processing'],
  ['olap', 'online analytical processing'],
  ['bi', 'business intelligence'],
  ['dwh', 'data warehouse'],
  ['dw', 'data warehouse'],
  ['dl', 'deep learning'],
  ['nlp', 'natural language processing'],
  ['cv', 'computer vision'],
  ['ar', 'augmented reality'],
  ['vr', 'virtual reality'],
  ['xr', 'extended reality'],
  ['iot', 'internet of things'],
  ['iiot', 'industrial internet of things'],
  ['edge', 'edge computing'],
  ['fog', 'fog computing'],
  ['hpc', 'high-performance computing'],
  ['gpu', 'graphics processing unit'],
  ['tpu', 'tensor processing unit'],
  ['fpga', 'field-programmable gate array'],
  ['asic', 'application-specific integrated circuit'],
  ['risc', 'reduced instruction set computer'],
  ['cisc', 'complex instruction set computer'],
  ['arm', 'advanced risc machine'],
  ['x86', 'intel architecture'],
  ['x64', '64-bit extended'],
  ['amd64', 'amd 64-bit'],
  ['uefi', 'unified extensible firmware interface'],
  ['bios', 'basic input/output system'],
  ['efi', 'extensible firmware interface'],
  ['pxe', 'preboot execution environment'],
  ['dhcp', 'dynamic host configuration protocol'],
  ['nat', 'network address translation'],
  ['wan', 'wide area network'],
  ['lan', 'local area network'],
  ['vlan', 'virtual local area network'],
  ['san', 'storage area network'],
  ['nas', 'network-attached storage'],
  ['das', 'direct-attached storage'],
  ['raid', 'redundant array of independent disks'],
  ['lvm', 'logical volume manager'],
  ['uuid', 'universally unique identifier'],
  ['guid', 'globally unique identifier'],
  ['uri', 'uniform resource identifier'],
  ['urn', 'uniform resource name'],
  ['mime', 'multipurpose internet mail extensions'],
  ['utf8', '8-bit unicode transformation format'],
  ['utf16', '16-bit unicode transformation format'],
  ['ascii', 'american standard code for information interchange'],
  ['unicode', 'universal character encoding standard'],
  ['base64', 'base 64 encoding'],
  ['md5', 'message digest 5'],
  ['sha1', 'secure hash algorithm 1'],
  ['sha256', 'secure hash algorithm 256'],
  ['aes', 'advanced encryption standard'],
  ['rsa', 'rivest-shamir-adleman'],
  ['pki', 'public key infrastructure'],
  ['ca', 'certificate authority'],
  ['tls', 'transport layer security'],
  ['ssl', 'secure sockets layer'],
  ['https', 'hypertext transfer protocol secure'],
  ['sftp', 'secure file transfer protocol'],
  ['scp', 'secure copy protocol'],
  ['ssh', 'secure shell'],
  ['vpn', 'virtual private network'],
  ['wpa', 'wi-fi protected access'],
  ['wep', 'wired equivalent privacy'],
  ['wifi', 'wireless fidelity'],
  ['lan', 'local area network'],
  ['wan', 'wide area network'],
  ['man', 'metropolitan area network'],
  ['pan', 'personal area network'],
  ['can', 'campus area network'],
  ['gan', 'global area network'],
  ['isdn', 'integrated services digital network'],
  ['pstn', 'public switched telephone network'],
  ['voip', 'voice over internet protocol'],
  ['sip', 'session initiation protocol'],
  ['rtc', 'real-time communication'],
  ['webrtc', 'web real-time communication'],
  ['p2p', 'peer-to-peer'],
  ['cdn', 'content delivery network'],
  ['ddos', 'distributed denial of service'],
  ['dos', 'denial of service'],
  ['waf', 'web application firewall'],
  ['ids', 'intrusion detection system'],
  ['ips', 'intrusion prevention system'],
  ['siem', 'security information and event management'],
  ['soar', 'security orchestration, automation and response'],
  ['cti', 'cyber threat intelligence'],
  ['ioc', 'indicator of compromise'],
  ['ttps', 'tactics, techniques, and procedures'],
  ['mitre', 'mitre attack framework'],
  ['cve', 'common vulnerabilities and exposures'],
  ['cvss', 'common vulnerability scoring system'],
  ['cwe', 'common weakness enumeration'],
  ['nist', 'national institute of standards and technology'],
  ['iso', 'international organization for standardization'],
  ['gdpr', 'general data protection regulation'],
  ['hipaa', 'health insurance portability and accountability act'],
  ['sox', 'sarbanes-oxley act'],
  ['pci', 'payment card industry'],
  ['dss', 'data security standard'],
  ['fisma', 'federal information security management act'],
  ['fedramp', 'federal risk and authorization management program'],
  ['nist', 'national institute of standards and technology'],
  ['sans', 'sysadmin, audit, network, security'],
  ['cissp', 'certified information systems security professional'],
  ['cism', 'certified information security manager'],
  ['cisa', 'certified information systems auditor'],
  ['cissp', 'certified information systems security professional'],
  ['gcih', 'giac certified incident handler'],
  ['gsec', 'giac security essentials'],
  ['ceh', 'certified ethical hacker'],
  ['oscp', 'offensive security certified professional'],
  ['cissp', 'certified information systems security professional'],
  ['ccsp', 'certified cloud security professional'],
  ['cissp', 'certified information systems security professional'],
  ['cism', 'certified information security manager'],
  ['cisa', 'certified information systems auditor'],
  ['crisc', 'certified in risk and information systems control'],
]);

const allAcronyms = new Map<string, string>([
  ...acronyms,
  ...technicalAcronyms,
]);

function detectAcronyms(content: string): string[] {
  const words = content.toLowerCase().split(/\b/);
  const detectedAcronyms = words.filter((word) => allAcronyms.has(word));

  const wordsWithSpaces = content.toLowerCase().split(/\s+/);
  const detectedAcronymsWithSpaces = wordsWithSpaces.filter((word) =>
    allAcronyms.has(word)
  );

  return Array.from(
    new Set([...detectedAcronyms, ...detectedAcronymsWithSpaces])
  );
}

export function registerAcronymListeners(client: Client): void {
  logger.info('Acronym listeners registered');

  client.on('messageCreate', async (message: Message) => {
    try {
      if (message.author.bot) return;

      if (message.channel.id !== WATERCOOLER_CHANNEL_ID) return;

      const detectedAcronyms = detectAcronyms(message.content);

      if (detectedAcronyms.length > 0) {
        const definitions = detectedAcronyms
          .map((acronym) => `${acronym} = ${allAcronyms.get(acronym)}`)
          .join('\n');

        await message.reply(definitions);

        logger.info({
          event: 'acronyms_detected',
          userId: message.author.id,
          acronyms: detectedAcronyms,
          channelId: message.channel.id,
        });
      }
    } catch (error) {
      logger.error({
        event: 'acronym_detection_error',
        error: error instanceof Error ? error.message : 'Unknown error',
        messageId: message.id,
      });
    }
  });
}
